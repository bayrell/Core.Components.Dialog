/*!
 *  Bayrell Core Library
 *
 *  (c) Copyright 2018-2019 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
 
namespace Core.Components.Dialog;

use Runtime.CoreStruct;


struct DialogModel extends CoreStruct
{
	const string STYLE_PROMT = "promt";
	const string STYLE_CONFIRM = "confirm";
	const string STYLE_ALERT = "alert";
	const string BUTTON_RESULT_OK = "ok";
	const string BUTTON_RESULT_CANCEL = "cancel";
	const string BUTTON_RESULT_EXIT = "exit";
	
	public bool is_open = false;
	public bool is_modal = false;
	public string action = "";
	public string style = "";
	public string title = "";
	public string message = "";
	public string input = "";
	public string button_result = "";
	public string error = "";
	public primitive tag = null;
	
	
	
	/**
	 * Show dialog
	 */
	public DialogModel show(Dict params)
	{
		params = params.concat({
			"action": params.get("action", ""),
			"input": params.get("input", ""),
			"is_open": true,
			"button_result": "",
			"error": "",
		});
		return this.copy(params);
	}
	
	
	
	/**
	 * Hide dialog
	 */
	public DialogModel hide(string button_result = "")
	{
		return this.copy({"is_open": false, "tag": null, "action": "", "style": "", "button_result": button_result});
	}
	
	
	
	/**
	 * Set error
	 */
	public DialogModel setError(string error)
	{
		return this.copy({"error": error});
	}
	
	
	
	/**
	 * Set input
	 */
	public DialogModel setInput(string input)
	{
		return this.copy({"input": input});
	}
	
}